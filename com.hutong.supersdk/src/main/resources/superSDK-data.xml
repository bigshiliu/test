<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
			
	<context:component-scan
		base-package="com.hutong.supersdk.mysql" />
	<context:annotation-config />
	
	<!-- for memcahced client -->
	<!-- <bean id="memcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
		<property name="servers" value="${memcached.servers}" />
		<property name="protocol" value="${memcached.protocol}" />
		<property name="transcoder">
			<bean class="net.spy.memcached.transcoders.SerializingTranscoder">
				<property name="compressionThreshold" value="${memcached.compressionThreshold}" />
			</bean>
		</property> -->
		<!-- should server support SASL <property name="authDescriptor"> <bean 
			class="net.spy.memcached.auth.AuthDescriptor"> <constructor-arg index="0" 
			value="PLAIN" /> <constructor-arg index="1"> <bean class="net.spy.memcached.auth.PlainCallbackHandler"> 
			<constructor-arg index="0" value="${memcached.username}"/> <constructor-arg 
			index="1" value="${memcached.password}"/> </bean> </constructor-arg> </bean> 
			</property> -->
		<!-- <property name="opTimeout" value="${memcached.opTimeout}" />
		<property name="timeoutExceptionThreshold" value="${timeoutExceptionThreshold}" />
		<property name="hashAlg">
			<value type="net.spy.memcached.DefaultHashAlgorithm">${memcached.hashAlg}</value>
		</property>
		<property name="locatorType" value="${locatorType}" />
		<property name="failureMode" value="${failureMode}" />
		<property name="useNagleAlgorithm" value="${useNagleAlgorithm}" />
	</bean> -->
		
	<!--SuperSDK默认数据源一 -->
	<bean id="defaultSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${config_DriverName}" />
		<property name="url" value="${config_Url}" />
		<property name="username" value="${config_User}" />
		<property name="password" value="${config_Password}" />
		<property name="validationQuery" value="SELECT COUNT(*) FROM DUAL" />
		<property name="initialSize" value="50" />
		<property name="maxActive" value="200" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="numTestsPerEvictionRun" value="20" />
	</bean>	
	
	<!-- APP默认数据源 -->
	<bean id="appDefaultSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${appDefault_DriverName}" />
		<property name="url" value="${appDefault_Url}" />
		<property name="username" value="${appDefault_User}" />
		<property name="password" value="${appDefault_Password}" />
		<property name="validationQuery" value="SELECT COUNT(*) FROM DUAL" />
		<property name="initialSize" value="50" />
		<property name="maxActive" value="200" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="numTestsPerEvictionRun" value="20" />
	</bean>	
	
	<!-- App的动态数据源 Config数据源  -->
	<bean id="configSource" class="com.hutong.supersdk.mysql.dynamic.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String" />
		</property>
		<property name="defaultTargetDataSource" ref="defaultSource" />
	</bean>
	
	<!-- Config工厂 -->
	<bean id="configFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="configSource" />
		<property name="packagesToScan">
			<list>
				<value>com.hutong.supersdk.mysql.config.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
	</bean>
	<bean id="configTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"
		p:sessionFactory-ref="configFactory" />
		
	<!-- Config事务管理器  -->    
    <bean id="configTxManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
        <property name="sessionFactory" ref="configFactory" />
        <qualifier value="configTx"/>
    </bean> 
	
	<!-- 实例——(动态数据源) -->
	<bean id="instSource" class="com.hutong.supersdk.mysql.dynamic.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String" />
		</property>
		<property name="defaultTargetDataSource" ref="appDefaultSource" />
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="instSource" />
		<property name="packagesToScan">
			<list>
				<value>com.hutong.supersdk.mysql.inst.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
	</bean>
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"
		p:sessionFactory-ref="sessionFactory" />
		
	<!-- 定义事务管理器 -->    
    <bean id="instTxManager"  class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />
        <qualifier value="instTx"/>
    </bean> 
		
	<tx:annotation-driven order="2" />
</beans>